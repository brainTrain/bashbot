# Name:        tag-release.yaml
# Author:      Mathew Fleisch <mathew.fleisch@gmail.com>
# Description: This action will build and push a docker container, when triggered by
#              pushing a new git tag (that starts with the letter 'v').
name: Release Bashbot
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    needs: release
    name: Build and Push Bashbot Container
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - 
        name: Set tag environment variable
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      -
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          platforms: linux/amd64,linux/arm64
          tags: mathewfleisch/bashbot:latest,mathewfleisch/bashbot:${{ env.RELEASE_VERSION }}

  # Release bashbot go-binaries once the docker container is built and pushed.
  release:
    name: Release Bashbot Binaries
    runs-on: macos-latest
    steps:
      -
        name: Checkout Bashbot source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - 
        name: Install Golang via asdf
        uses: asdf-vm/actions/install@v1
        with:
          tool_versions: golang 1.16.6
      -
        name: Build go-binaries
        run: |
          asdf global golang 1.16.6
          make setup
          make cross
          echo "Go-Binaries created: $(ls bin -alF)"

      -
        name: Cut Github Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GIT_TOKEN }}
          allowUpdates: true
          artifacts: "bin/*"




